<Window x:Class="Gokarts.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:views="clr-namespace:Gokarts.Views"
        xmlns:viewmodels="clr-namespace:Gokarts.ViewModels"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800"
        >
    <Window.Resources>
        <Style TargetType="Button">
            <Setter Property="Background" Value="AliceBlue"></Setter>
        </Style>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#3A4542"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#3A4542"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <ControlTemplate x:Key="ButtonTemplate1" TargetType="{x:Type ButtonBase}">
            <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Button.IsDefaulted" Value="true">
                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="true">
                    <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                    <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
    </Window.Resources>
    <ContentControl Content="{Binding CurrentViewModel}">
        <ContentControl.Resources>
            <DataTemplate DataType="{x:Type viewmodels:HomeViewModel}">
                <views:HomeView />
            </DataTemplate>
            <DataTemplate DataType="{x:Type viewmodels:ServiceViewModel}">
                <views:ServiceView />
            </DataTemplate>
            <DataTemplate DataType="{x:Type viewmodels:PlayersAndTeamsListViewModel}">
                <views:PlayersAndTeamsView />
            </DataTemplate>
            <DataTemplate DataType="{x:Type viewmodels:HistoryListViewModel}">
                <views:HistoryListView />
            </DataTemplate>
            <DataTemplate DataType="{x:Type viewmodels:TournamentListViewModel}">
                <views:TournamentListView/>
            </DataTemplate>
            <DataTemplate DataType="{x:Type viewmodels:AddOrEditTournamentViewModel}">
                <views:AddOrEditTournamentView />
            </DataTemplate>
            <DataTemplate DataType="{x:Type viewmodels:LoginViewModel}">
                <views:LoginView />
            </DataTemplate>
        </ContentControl.Resources>
    </ContentControl>
</Window>
